
@*@{
    ViewData["Title"] = $"{ViewBag.Name} Block Explorer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model ITransactionModel

<div class="text-center details-table-width mt-4">
    
    <div class="card">
        <div class="card-body">
            <h1 class="table-title">Details for Transaction</h1>

            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Hash</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding text-info">@Model.Hash</div>
            </div>
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Size</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@Math.Round((Model.Size / 1024m), 4) kB</div>
            </div>
            @if (Model.LockTime > 0)
            {
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Lock Time</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@Model.LockTime</div>
                </div>
            }
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Block Height</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@Model.Block.Height (@Model.Confirmations Confirmations)</div>
            </div>
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Block Time</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@DateTimeOffset.FromUnixTimeSeconds(Model.BlockTime)</div>
            </div>
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Total Outputs</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@Model.Outputs.Sum(p => p.Value) @ViewBag.Ticker</div>
            </div>
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Total Inputs</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@Model.Inputs.Sum(p => p.Amount) @ViewBag.Ticker</div>
            </div>
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Fee</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@(Model.Inputs.Sum(p => p.Amount) - Model.Outputs.Sum(p => p.Value)) @ViewBag.Ticker</div>
            </div>
            <div class="row rows">
                <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column px5-bottom-padding details-row-title">Fee per byte</div>
                <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column px5-bottom-padding">@(Math.Round((Model.Inputs.Sum(p => p.Amount) - Model.Outputs.Sum(p => p.Value)) / Model.Size * 100000000m, 4)) sat/B</div>
            </div>
        </div>
    </div>
</div>

<br />



<div class="card" id="main-table-block">
    <div class="card-body">
        <h1 class="table-title">Inputs</h1>
        <div class="row row-header">
            <div class="col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1 col-xxxl-1 row-header-column text-center">Index</div>
            <div class="col-sm-6 col-md-6 col-lg-6 col-xl-6 col-xxl-6 col-xxxl-6 row-header-column text-center">Previous output</div>
            <div class="col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3 col-xxxl-3 row-header-column text-center">Address</div>
            <div class="col-sm-2 col-md-2 col-lg-2 col-xl-2 col-xxl-2 col-xxxl-2 row-header-column text-center">Amount</div>

        </div>
        <div class="row">
            <div class="col-12">
                @{ var i = 0L;}
                @foreach (var input in Model.Inputs)
                {

                    <div class="row rows">
                        <div class="col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1 col-xxxl-1 row-column text-center">
                            @i
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xl-6 col-xxl-6 col-xxxl-6 row-column text-center">
                            @if (string.IsNullOrEmpty(input.TxId))
                            {
                                <span>Generation + Fees</span>
                            }
                            else
                            {
                                <a href="@Url.Action("Index", "Transaction", new {transactionHash = input.TxId})">
                                    <code><span class="text-truncate">@input.TxId</span>:<span>@input.Vout</span></code>
                                </a>
                            }
                        </div>
                        <div class="col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3 col-xxxl-3 row-column text-center">
                            @string.Join("<br/>", input.From)
                        </div>
                        <div class="col-sm-2 col-md-2 col-lg-2 col-xl-2 col-xxl-2 col-xxxl-2 row-column text-center">
                            @if (string.IsNullOrEmpty(input.TxId))
                            {
                                @Model.Outputs.Sum(p => p.Value)
                                @ViewBag.Ticker
                            }
                            else
                            {
                                @input.Amount
                            }
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
</div>
<br/>
<div class="card" id="main-table-block">
    <div class="card-body">
    <h1 class="table-title">Outputs</h1>
    <div class="row row-header">
        <div class="col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1 col-xxxl-1 row-header-column text-center">Index</div>
        <div class="col-sm-6 col-md-6 col-lg-6 col-xl-6 col-xxl-6 col-xxxl-6 row-header-column text-center">Previous output</div>
        <div class="col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3 col-xxxl-3 row-header-column text-center">Address</div>
        <div class="col-sm-2 col-md-2 col-lg-2 col-xl-2 col-xxl-2 col-xxxl-2 row-header-column text-center">Amount</div>

    </div>
        <div class="row">
            <div class="col-12">
                @foreach (var output in Model.Outputs)
                {

                    <div class="row rows">
                        <div class="col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1 col-xxxl-1 row-column text-center">
                            @output.Index
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6 col-xl-6 col-xxl-6 col-xxxl-6 row-column text-center">
                            @if (string.IsNullOrEmpty(output.RedeemedTxId))
                            {
                                <span>Not yet redeemed</span>
                            }
                            else
                            {
                                <a href="@Url.Action("Index", "Transaction", new {transactionHash = output.RedeemedTxId})">
                                    <code><span class="text-truncate">@output.RedeemedTxId</span>:<span>@output.RedeemedIndex</span></code>
                                </a>
                            }
                        </div>
                        <div class="col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3 col-xxxl-3 row-column text-center">
                            @string.Join("<br/>", output.ScriptPubKey.Addresses)
                        </div>
                        <div class="col-sm-2 col-md-2 col-lg-2 col-xl-2 col-xxl-2 col-xxxl-2 row-column text-center">
                            @output.Value @ViewBag.Ticker
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
</div>*@





