
@{
    ViewData["Title"] = $"{ViewBag.Name} Block Explorer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using System.Globalization
@using Solaris.BlockExplorer.UI.Extensions
@using Solaris.BlockExplorer.UI.HtmlHelpers
@model Solaris.BlockExplorer.UI.Models.ViewModels.IBlockViewModel

<div class="row mt-2 mb-2 collapse clipboard-success">
    <div class="col-12">
        <div class="alert alert-success" role="alert">
            <span class="align-middle">
                <i class="fas fa-check-circle fa-2x mr-2"></i>
            </span>
            <span class="align-middle">
                The block hash has been copied to the clipboard
            </span>
        </div>
    </div>
</div>
<div class="row mt-2">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="title-bottom-border mb-2">
                    Details for Block #@Model.Block.Height
                </h4>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column text-lightblue">Hash</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">
                        <a href="@Url.Action("Index", new { id = Model.Block.Id })">@Model.Block.Id</a>
                        <i class="ml-2 fas fa-copy cursor-pointer clipboard" title="Copy to clipboard" data-clipboard-text="@Model.Block.Id"></i>
                    </div>
                </div>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column">Date/Time</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">@DateTimeOffset.FromUnixTimeSeconds(Model.Block.Time).DateTime.ToString(CultureInfo.CurrentUICulture)</div>
                </div>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column">Transactions</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">@Model.Block.Transactions <span class="badge badge-primary">@(Math.Round(Model.Block.Size / 1024m, 4)) kB</span></div>
                </div>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column">Value In</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">@Model.Block.InputValue @ViewBag.Ticker</div>
                </div>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column">Value Out</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">@Model.Block.OutputValue @ViewBag.Ticker</div>
                </div>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column">Difficulty</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">@Model.Block.Difficulty</div>
                </div>
                <div class="row rows">
                    <div class="col-sm-3 col-md-2 col-lg-2 col-xl-3 col-xxl-2 col-xxxl-2 text-left row-column">Created</div>
                    <div class="col-sm-9 col-md-10 col-lg-10 col-xl-9 col-xxl-10 col-xxxl-10 text-left row-column">@(Model.Block.OutputValue - Model.Block.InputValue) @ViewBag.Ticker</div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row mt-2 mb-2 d-none d-lg-block">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="title-bottom-border mb-2">
                    Transactions
                </h4>
                <div class="row row-header">
                    <div class="col-lg-2 col-xl-3 col-xxl-4 row-header-column text-left">Transaction Hash</div>
                    <div class="col-lg-5 col-xl-4 col-xxl-4 text-left">From (amount)</div>
                    <div class="col-lg-5 col-xl-5 col-xxl-4 row-header-column text-left">To (amount)</div>
                </div>
                <div class="row">
                    <div class="col-12">
                        @foreach (var transaction in Model.Transactions)
                        {
                            <div class="row rows">
                                <div class="col-lg-2 col-xl-3 col-xxl-4 row-column text-left">
                                    <a href="@Url.Action("Index", "Transaction", new { id = transaction.TransactionId })">@transaction.TransactionId</a>
                                </div>
                                <div class="col-lg-5 col-xl-4 col-xxl-4 row-column text-left">
                                    @foreach (var input in transaction.Inputs)
                                    {
                                        <div class="row">
                                            <div class="col-6 text-left">
                                                @if (!input.Addresses.Any())
                                                {
                                                    <span>Generation + Fees</span>
                                                }

                                                @Url.AddressLink(input.Addresses)
                                            </div>
                                            <div class="col-6 text-right">
                                                @if (input.Amount != null)
                                                {
                                                    <span>@input.Amount @ViewBag.Ticker</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="col-lg-5 col-xl-5 col-xxl-4 row-column text-right">
                                    @foreach (var output in transaction.Outputs)
                                    {
                                        <div class="row">
                                            <div class="col-6 text-left">
                                                @if (transaction.OutputSum <= 0 && !output.IsNullData)
                                                {
                                                    <span>Included in another transaction</span>
                                                }

                                                @if (output.Addresses.Any(string.IsNullOrWhiteSpace) && transaction.OutputSum > 0 && !output.IsNullData)
                                                {
                                                    <span>Generation + Fees</span>
                                                }
                                                @if (output.IsNullData)
                                                {
                                                    <span>No data</span>
                                                }
                                                @Url.AddressLink(output.Addresses)
                                            </div>
                                            <div class="col-6 text-right">
                                                @if (output.Amount == null || output.Amount == 0 && !output.IsNullData)
                                                {
                                                    <span>@(Model.Block.OutputValue - Model.Block.InputValue) @ViewBag.Ticker</span>
                                                }
                                                else
                                                {
                                                    <span>@output.Amount @ViewBag.Ticker</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-2 mb-2 d-lg-none">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="title-bottom-border mb-0">
                    Transactions
                </h4>
                <div class="row">
                    <div class="col-12">
                        @foreach (var transaction in Model.Transactions)
                        {

                            <div class="row row-header mt-2">
                                <div class="col-12 row-header-column text-left">
                                    <span>Transaction</span>
                                </div>
                            </div>
                            <div class="row rows">
                                <div class="col-12 text-lightblue text-left my-1">
                                    <span>Hash:</span>
                                </div>
                                <div class="col-12 text-truncate">
                                    <a href="@Url.Action("Index", "Transaction", new {id = transaction.TransactionId})">@transaction.TransactionId</a>
                                </div>
                                @foreach (var input in transaction.Inputs)
                                {
                                    <div class="row col-12">
                                        <div class="col-8 text-lightblue text-left my-1">
                                            <span>From:</span>
                                        </div>
                                        <div class="col-4 text-lightblue text-right text-right my-1">
                                            <span>Amount:</span>
                                        </div>
                                    </div>

                                    <div class="row col-12">
                                        <div class="col-8 text-left">
                                            @if (!input.Addresses.Any())
                                            {
                                                <span>Generation + Fees</span>
                                            }

                                            @Url.AddressLink(input.Addresses)
                                        </div>
                                        <div class="col-4 text-right">
                                            @if (input.Amount != null)
                                            {
                                                <span>@input.Amount @ViewBag.Ticker</span>
                                            }
                                        </div>
                                    </div>

                                }
                                <div class="row col-12">
                                    <div class="col-12 text-lightblue text-left my-1">
                                        <span>To:</span>
                                    </div>
                                </div>
                                @foreach (var output in transaction.Outputs)
                                {
                                    <div class="row col-12">
                                        <div class="col-8 text-left">
                                            @if (transaction.OutputSum <= 0 && !output.IsNullData)
                                            {
                                                <span>Included in another transaction</span>
                                            }

                                            @if (output.Addresses.Any(string.IsNullOrWhiteSpace) && transaction.OutputSum > 0 && !output.IsNullData)
                                            {
                                                <span>Generation + Fees</span>
                                            }
                                            @if (output.IsNullData)
                                            {
                                                <span>No data</span>
                                            }
                                            @Url.AddressLink(output.Addresses)
                                        </div>
                                        <div class="col-4 text-right">
                                            @if (output.Amount == null || output.Amount == 0 && !output.IsNullData)
                                            {
                                                <span>@(Model.Block.OutputValue - Model.Block.InputValue) @ViewBag.Ticker</span>
                                            }
                                            else
                                            {
                                                <span>@output.Amount @ViewBag.Ticker</span>
                                            }
                                        </div>
                                    </div>

                                }
                            </div>
                        }
                        </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-2 mb-2">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="title-bottom-border mb-2">
                    Raw block
                </h4>
                <div class="row mt-2 mb-2"><div class="col-12"><pre><code class="json">@Model.Block.Json.PrettyPrintJson()</code></pre></div></div>
            </div>
        </div>
    </div>
</div>
<script>hljs.initHighlightingOnLoad();</script>